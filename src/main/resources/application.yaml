server:
  port: 8085

---

server:
  port: 8085

spring:
  profiles: default
  datasource:
    url: jdbc:mysql://match-service-db.mysql.database.azure.com:3306/match_db?serverTimezone=Asia/Seoul
    username: mungta
    password: andxk12#$
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    # hibernate:
    #   ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true

  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        bindings:
          partyRegistered-in-0:
            consumer:
              configuration:
                key:
                  deserializer: org.apache.kafka.common.serialization.StringDeserializer
          partyStatusChanged-out:
            producer:
              configuration:
                key:
                  serializer: org.apache.kafka.common.serialization.StringSerializer
          partyMemberAccept-out:
            producer:
              configuration:
                key:
                  serializer: org.apache.kafka.common.serialization.StringSerializer
          partyMemberCanceled-out:
            producer:
              configuration:
                key:
                  serializer: org.apache.kafka.common.serialization.StringSerializer
      bindings:
        partyRegistered-in-0:
          destination: party-registered
        partyStatusChanged-out:
          destination: party-status-changed
          contentType: application/json
        partyMemberAccept-out:
          destination: party-member-accept
          contentType: application/json
        partyMemberCanceled-out:
          destination: party-member-canceled
          contentType: application/json

api:
  url:
    user: http://localhost:8081/api/user
    review: http://localhost:8086/api/review

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

---


spring:
  profiles: docker
  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: pet
          destination: petstore
          contentType: application/json
        event-out:
          destination: petstore
          contentType: application/json


api:
  url:
    user: http://localhost:8082/api/user
    review: http://localhost:8083/api/review

